import argparse


def ParseArgs():
    parser = argparse.ArgumentParser(description='Model Params')
    parser.add_argument('--lr', default=0.001, type=float, help='learning rate')
    parser.add_argument('--batch', default=1024, type=int, help='batch size')
    parser.add_argument('--epoch', default=500, type=int, help='number of epochs')

    parser.add_argument('--n_class', default=65, type=int, help='number of class')
    parser.add_argument('--loss_fn', default="CrossEntropyLoss", type=str, help='BCEWithLogitsLoss, CrossEntropyLoss')

    parser.add_argument('--atom_dim', default=75, type=int, help='atom(node) embedding size, 固定是75，不能改变')
    parser.add_argument('--clip_n_atom', default=75, type=int, help='对齐原子数')
    # parser.add_argument('--cnn_cap_dim', default=8, type=int, help='cnn_capture embedding size, 这一层之后会展平放入分类器')
    parser.add_argument('--mlp_hid_dim', default=256, type=int, help='最后两个线性层的隐藏层')
    parser.add_argument('--gnn_layer', default=2, type=int, help='number of gnn layers')
    parser.add_argument('--att_head', default=5, type=int, help='number of attention heads')
    parser.add_argument('--block_num', default=3, type=int, help='number of hops in gcn precessing')
    parser.add_argument('--dropout', default=0.1, type=float, help='Ratio of mlp layer dropout')

    parser.add_argument('--gpu', default=0, type=int, help='indicates which gpu to use')
    parser.add_argument('--device', default='cuda:0', type=str, help='indicates which gpu to use')

    parser.add_argument('--root_path', default="Data/Deng's dataset", type=str, help='root_path')
    parser.add_argument('--train_path', default='train.csv', type=str, help='kind_path')
    parser.add_argument('--val_path', default='val.csv', type=str, help='kind_path')
    parser.add_argument('--test_path', default='test.csv', type=str, help='kind_path')

    return parser.parse_args()


args = ParseArgs()
